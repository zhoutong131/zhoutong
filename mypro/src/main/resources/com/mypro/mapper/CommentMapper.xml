<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mypro.mapper.CommentMapper" >
  <resultMap id="BaseResultMap" type="com.mypro.model.Comment" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <id column="article_id" property="article_id" jdbcType="INTEGER" />
    <result column="author_id" property="author_id" jdbcType="INTEGER" />
    <result column="reply_id" property="reply_id" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="create_time" property="create_time" jdbcType="TIMESTAMP" />
    <result column="update_time" property="update_time" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.mypro.model.Comment" extends="BaseResultMap" >
    <result column="comment_content" property="comment_content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, article_id, author_id, reply_id, status, create_time, update_time
  </sql>
  <sql id="Blob_Column_List" >
    comment_content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="com.mypro.model.CommentKey" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment
    where id = #{id,jdbcType=INTEGER}
      and article_id = #{article_id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.mypro.model.CommentKey" >
    delete from comment
    where id = #{id,jdbcType=INTEGER}
      and article_id = #{article_id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mypro.model.Comment" >
    insert into comment (id, article_id, author_id, 
      reply_id, status, create_time, 
      update_time, comment_content)
    values (#{id,jdbcType=INTEGER}, #{article_id,jdbcType=INTEGER}, #{author_id,jdbcType=INTEGER}, 
      #{reply_id,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, #{create_time,jdbcType=TIMESTAMP}, 
      #{update_time,jdbcType=TIMESTAMP}, #{comment_content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.mypro.model.Comment" >
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="article_id != null" >
        article_id,
      </if>
      <if test="author_id != null" >
        author_id,
      </if>
      <if test="reply_id != null" >
        reply_id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="create_time != null" >
        create_time,
      </if>
      <if test="update_time != null" >
        update_time,
      </if>
      <if test="comment_content != null" >
        comment_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="article_id != null" >
        #{article_id,jdbcType=INTEGER},
      </if>
      <if test="author_id != null" >
        #{author_id,jdbcType=INTEGER},
      </if>
      <if test="reply_id != null" >
        #{reply_id,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="create_time != null" >
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null" >
        #{update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="comment_content != null" >
        #{comment_content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mypro.model.Comment" >
    update comment
    <set >
      <if test="author_id != null" >
        author_id = #{author_id,jdbcType=INTEGER},
      </if>
      <if test="reply_id != null" >
        reply_id = #{reply_id,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="create_time != null" >
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null" >
        update_time = #{update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="comment_content != null" >
        comment_content = #{comment_content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
      and article_id = #{article_id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.mypro.model.Comment" >
    update comment
    set author_id = #{author_id,jdbcType=INTEGER},
      reply_id = #{reply_id,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      update_time = #{update_time,jdbcType=TIMESTAMP},
      comment_content = #{comment_content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
      and article_id = #{article_id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mypro.model.Comment" >
    update comment
    set author_id = #{author_id,jdbcType=INTEGER},
      reply_id = #{reply_id,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      update_time = #{update_time,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
      and article_id = #{article_id,jdbcType=INTEGER}
  </update>
</mapper>